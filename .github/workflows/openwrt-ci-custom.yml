#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI-Custom

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      device:
        description: '请选择构建设备'
        default: 'r2s'
        required: false
  #schedule:
  #  - cron: 0 20 * * *
  #push:
  #  branches:
  #    - master
permissions:
  contents: read

jobs:

  build_openwrt:

    name: 构建OpenWrt镜像：${{ github.event.inputs.device }}

    runs-on: ubuntu-latest

    steps:
      - name: 空间清理和环境初始化
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          sudo -E apt -y install python3-dev python3-pip
          sudo -E pip install pyelftools

      - name: 检出代码仓库到工作流环境
        uses: actions/checkout@v4

      - name: feeds软件源更新
        run: |
          echo -e "新增feeds软件源"
          echo -e "src-git Openclash https://github.com/vernesong/OpenClash" >> ./feeds.conf.default
          ./scripts/feeds update -a

      - name: feeds软件源安装
        run: |
          ./scripts/feeds install -a

      - name: 读取/生成默认 配置文件
        run: |
          echo -e "IP地址 -> 10.0.2.1"
          sed -i '150s/ipad=${ipaddr:-"192.168.1.1"}/ipad=${ipaddr:-"10.0.2.1"}/' package/base-files/files/bin/config_generate
          sed -i '151s/ipad=${ipaddr:-"192.168.$((addr_offset++)).1"}/ipad=${ipaddr:-"10.0.$((addr_offset++)).1"}/' package/base-files/files/bin/config_generate
          echo -e "WAN -> pppoe"
          sed -i '86s/${2:-dhcp}/${2:-pppoe}/' package/base-files/files/lib/functions/uci-defaults.sh
          echo -e "Config -> 复制配置文件：.${{ github.event.inputs.device }}.config"
          cp -f "${{ github.event.inputs.device }}.config" .config
        #  cat .config
        #run: make defconfig

      - name: 下载DL库
        run: make download -j16

      - name: 编译固件
        run: |
          echo -e "$(nproc) thread build."
          echo -e "======================="
          make -j$(($(nproc) + 1)) V=s
          #make -j$(nproc) || make -j1 V=s
          echo -e "======================="
          echo -e "Space usage:"
          echo -e "======================="
          df -h
          echo -e "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          echo -e "======================="
          du -h --max-depth=1 ./build_dir
          echo -e "======================="
          du -h --max-depth=1 ./bin

      - name: 准备上传文件
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          cp -rf .config ./artifact/buildinfo/

      - name: 上传 buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: 上传 package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: 上传 firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/